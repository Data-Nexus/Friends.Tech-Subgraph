type Protocol @entity {
  " Contract address for FriendtechShares "
  id: Bytes!

  " timestamp for when this was most recently updated "
  timestamp: BigInt!

  " Unique accounts for the protocol "
  userCount: BigInt!

  " Trade volume for the protocol "
  tradeVolume: BigInt!

  " Total revenue owned by the accounts "
  accountRevenue: BigInt!

  " Total revenue owned by the protocol "
  protocolRevenue: BigInt!

  " Total Trades made in the protocol (trade + protocolRevenue + subjectRevenue) "
  totalTrades: BigInt!

  " link to the daily timeseries for the protocol "
  protocolDailies: [ProtocolDaily!]! @derivedFrom(field: "protocol")
}

type Account @entity {
  " address for the user "
  id: Bytes!

  " timestamp for when this was most recently updated "
  timestamp: BigInt!

  " how many of the unique users own shares of this account "
  holdersCount: BigInt!

  " how many trades this account has made "
  tradesCount: BigInt!

  " total amount of keys that exist for this account "
  keySupply: BigInt!

  " link to the holdings of this user "
  holding: [Holding!]! @derivedFrom(field: "holder")

  " link to who holds this user "
  holders: [Holding!]! @derivedFrom(field: "subject")

  " Fees earned by the account for holders trading shares "
  accountRevenue: BigInt!

  " trades made by this account "
  trades: [Trade!]! @derivedFrom(field: "trader")

  " trades of this account made by holders "
  tradesOf: [Trade!]! @derivedFrom(field: "subject")
}

" Relationship between 2 accounts "
type Holding @entity {
  id: Bytes!

  " timestamp for when this was most recently updated "
  timestamp: BigInt!

  " The Account who purchased a share/key "
  holder: Account!

  " The Account for which the key is for "
  subject: Account!

  " Amount of keys owned by the holder of the subject "
  keysOwned: BigInt!
}

# Time series

" time series for the day "
type ProtocolDaily @entity {
  " Contract + Day as bytes"
  id: ID!

  " Timestamp of the block / 86,400 "
  day: BigInt!

  " timestamp for when this was most recently updated "
  timestamp: BigInt!

  " parent to utilize derived fields"
  protocol: Protocol!

  " Monotonic sum of the unique users "
  userCount: BigInt!

  " Motonic sum of trade volume for the protocol "
  totalTradeVolume: BigInt!

  " Trade volume for the protocol for the day "
  dayTradeVolume: BigInt!

  " Motonic Total revenue owned by the accounts "
  totalAccountRevenue: BigInt!

  " Total revenue owned by the accounts for the day "
  dayAccountRevenue: BigInt!

  " Total protocol revenue for the day "
  totalProtocolRevenue: BigInt!

  " Total protocol revenue for the day "
  dayProtocolRevenue: BigInt!

  " Monotonic sum of protocol trades "
  totalTrades: BigInt!

  " Total trades for the day "
  dayTrades: BigInt!
}

# EVENT Entities #
type Trade @entity(immutable: true) {
  id: Bytes!
  trader: Account! # address
  subject: Account! # address
  isBuy: Boolean! # bool
  shareAmount: BigInt! # uint256
  ethAmount: BigInt! # uint256
  protocolEthAmount: BigInt! # uint256
  subjectEthAmount: BigInt! # uint256
  supply: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
